/******************************************************
 Laboratoire #4 : Compression quasi-JPEG
 
 Cours :             GTI310
 Session :           Automne 2010
 Groupe :            01
 Projet :            Laboratoire #4
 Étudiant(e)(s) :    Gabriel Desmarais
 					 Marie-Ève Benoit
 Code(s) perm. :     DESG24078908
 					 BENM22568707
 Chargée de lab. :   Jean-François Franche 
 Nom du fichier :    DCTManagerTest.java
 Date crée :         2010-12-1
 Date dern. modif.   2010-12-1
 *******************************************************/
package UnitTests;
import gti310.tp4.DCTManager;
import gti310.tp4.Main;

import java.util.LinkedList;
import java.util.List;

import junit.framework.TestCase;

public class DCTManagerTest extends TestCase{
	
	public void testDCT(){
		
		List<int[][][]> listBlocs = new LinkedList<int[][][]>();
		
		int[][] blocIniY = {{200,202,189,188,189,175,175,175},{200,203,198,188,189,182,178,175},{203,200,200,195,200,187,185,175},{200,200,200,200,197,187,187,187},{200,205,200,200,195,188,187,175},{200,200,200,200,200,190,187,175},{205,200,199,200,191,187,187,175},{210,200,200,200,188,185,187,186}};//new int[Main.COLOR_SPACE_SIZE][8][8];
		int[][] blocIniU = {{200,202,189,188,189,175,175,175},{200,203,198,188,189,182,178,175},{203,200,200,195,200,187,185,175},{200,200,200,200,197,187,187,187},{200,205,200,200,195,188,187,175},{200,200,200,200,200,190,187,175},{205,200,199,200,191,187,187,175},{210,200,200,200,188,185,187,186}};//new int[Main.COLOR_SPACE_SIZE][8][8];
		int[][] blocIniV = {{200,202,189,188,189,175,175,175},{200,203,198,188,189,182,178,175},{203,200,200,195,200,187,185,175},{200,200,200,200,197,187,187,187},{200,205,200,200,195,188,187,175},{200,200,200,200,200,190,187,175},{205,200,199,200,191,187,187,175},{210,200,200,200,188,185,187,186}};//new int[Main.COLOR_SPACE_SIZE][8][8];
		int[][][] blocIni = {blocIniY,blocIniU,blocIniV};
		
		
		int[][] blocFinY = {{1539,65,-12,4,1,2,-8,5},{-16,3,2,0,0,-11,-2,3},{-12,6,11,-1,3,0,1,-2},{-8,3,-4,2,-2,-3,-5,-2},{0,-2,7,-5,4,0,-1,-4},{0,-3,-1,0,4,1,-1,0},{3,-2,-3,3,3,-1,-1,3},{-2,5,-2,4,-2,2,-3,0}};
		int[][] blocFinU = {{1539,65,-12,4,1,2,-8,5},{-16,3,2,0,0,-11,-2,3},{-12,6,11,-1,3,0,1,-2},{-8,3,-4,2,-2,-3,-5,-2},{0,-2,7,-5,4,0,-1,-4},{0,-3,-1,0,4,1,-1,0},{3,-2,-3,3,3,-1,-1,3},{-2,5,-2,4,-2,2,-3,0}};		
		int[][] blocFinV = {{1539,65,-12,4,1,2,-8,5},{-16,3,2,0,0,-11,-2,3},{-12,6,11,-1,3,0,1,-2},{-8,3,-4,2,-2,-3,-5,-2},{0,-2,7,-5,4,0,-1,-4},{0,-3,-1,0,4,1,-1,0},{3,-2,-3,3,3,-1,-1,3},{-2,5,-2,4,-2,2,-3,0}};
		int[][][] blocFin = {blocFinY,blocFinU,blocFinV};
		
		listBlocs.add(blocIni);
		List<int[][][]> toTest = DCTManager.DCT(listBlocs);
		
		for(int i = 0 ; i < 8;i++)
			for (int j=0; j<8;j++)
			{
				assertEquals(blocFin[0][i][j],toTest.get(0)[0][i][j]);
			}	
		
	}
	
	public void testiDCT()
	{
		List<int[][][]> listBlocs = new LinkedList<int[][][]>();
		
		int[][] blocIniY = {{200,202,189,188,189,175,175,175},
							{200,203,198,188,189,182,178,175},
							{203,200,200,195,200,187,185,175},
							{200,200,200,200,197,187,187,187},
							{200,205,200,200,195,188,187,175},
							{200,200,200,200,200,190,187,175},
							{205,200,199,200,191,187,187,175},
							{210,200,200,200,188,185,187,186}};
		int[][] blocIniU = {{200,202,189,188,189,175,175,175},{200,203,198,188,189,182,178,175},{203,200,200,195,200,187,185,175},{200,200,200,200,197,187,187,187},{200,205,200,200,195,188,187,175},{200,200,200,200,200,190,187,175},{205,200,199,200,191,187,187,175},{210,200,200,200,188,185,187,186}};
		int[][] blocIniV = {{200,202,189,188,189,175,175,175},{200,203,198,188,189,182,178,175},{203,200,200,195,200,187,185,175},{200,200,200,200,197,187,187,187},{200,205,200,200,195,188,187,175},{200,200,200,200,200,190,187,175},{205,200,199,200,191,187,187,175},{210,200,200,200,188,185,187,186}};
		int[][][] blocIni = {blocIniY,blocIniU,blocIniV};
		
		
		int[][] blocFinY = {{1539,65,-12,4,1,2,-8,5},
							{-16,3,2,0,0,-11,-2,3},
							{-12,6,11,-1,3,0,1,-2},
							{-8,3,-4,2,-2,-3,-5,-2},
							{0,-2,7,-5,4,0,-1,-4},
							{0,-3,-1,0,4,1,-1,0},
							{3,-2,-3,3,3,-1,-1,3},
							{-2,5,-2,4,-2,2,-3,0}};
		int[][] blocFinU = {{1539,65,-12,4,1,2,-8,5},{-16,3,2,0,0,-11,-2,3},{-12,6,11,-1,3,0,1,-2},{-8,3,-4,2,-2,-3,-5,-2},{0,-2,7,-5,4,0,-1,-4},{0,-3,-1,0,4,1,-1,0},{3,-2,-3,3,3,-1,-1,3},{-2,5,-2,4,-2,2,-3,0}};		
		int[][] blocFinV = {{1539,65,-12,4,1,2,-8,5},{-16,3,2,0,0,-11,-2,3},{-12,6,11,-1,3,0,1,-2},{-8,3,-4,2,-2,-3,-5,-2},{0,-2,7,-5,4,0,-1,-4},{0,-3,-1,0,4,1,-1,0},{3,-2,-3,3,3,-1,-1,3},{-2,5,-2,4,-2,2,-3,0}};
		int[][][] blocFin = {blocFinY,blocFinU,blocFinV};
		
		listBlocs.add(blocFin);
		List<int[][][]> toTest = DCTManager.iDCT(listBlocs);
		
		for(int i = 0 ; i < 8;i++)
			for (int j=0; j<8;j++)
			{
				System.out.println("Ini "+blocIni[0][i][j]+" test "+toTest.get(0)[0][i][j]);
//				assertEquals(blocIni[0][i][j],toTest.get(0)[0][i][j]);
			}	
		
	}

}
